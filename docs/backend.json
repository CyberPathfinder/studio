{
  "entities": {
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz with a set of questions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Quiz entity."
        },
        "title": {
          "type": "string",
          "description": "Title of the quiz."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the quiz."
        },
        "questions": {
          "type": "array",
          "description": "Array of question IDs that belong to this quiz. (Relationship: Quiz 1:N Question)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "title",
        "questions"
      ]
    },
    "Question": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Question",
      "type": "object",
      "description": "Represents a single question in a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Question entity."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to Quiz. (Relationship: Quiz 1:N Question)"
        },
        "type": {
          "type": "string",
          "description": "Type of question (single_choice, multi_choice, number, text, date, yes_no, height_weight, unit_toggle)."
        },
        "text": {
          "type": "string",
          "description": "The question text to display to the user."
        },
        "options": {
          "type": "array",
          "description": "Array of options for multiple-choice questions.",
          "items": {
            "type": "string"
          }
        },
        "required": {
          "type": "boolean",
          "description": "Indicates if the question is required."
        },
        "showIf": {
          "type": "string",
          "description": "Expression to determine if the question should be displayed."
        },
        "validation": {
          "type": "string",
          "description": "Validation schema to be enforced when answering the question"
        }
      },
      "required": [
        "id",
        "quizId",
        "type",
        "text",
        "required"
      ]
    },
    "QuizResponse": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuizResponse",
      "type": "object",
      "description": "Represents a user's response to a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QuizResponse entity."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to Quiz. (Relationship: Quiz 1:N QuizResponse)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N QuizResponse)"
        },
        "responses": {
          "type": "array",
          "description": "Array of individual question responses.",
          "items": {
            "type": "string"
          }
        },
        "completionDate": {
          "type": "string",
          "description": "Timestamp indicating when the quiz was completed.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "quizId",
        "userId",
        "responses"
      ]
    },
    "QuestionResponse": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuestionResponse",
      "type": "object",
      "description": "Represents a user's response to a specific question within a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QuestionResponse entity."
        },
        "quizResponseId": {
          "type": "string",
          "description": "Reference to QuizResponse. (Relationship: QuizResponse 1:N QuestionResponse)"
        },
        "questionId": {
          "type": "string",
          "description": "Reference to Question. (Relationship: Question 1:N QuestionResponse)"
        },
        "value": {
          "type": "string",
          "description": "The user's answer to the question. Can be text, number, or selected option ID."
        }
      },
      "required": [
        "id",
        "quizResponseId",
        "questionId",
        "value"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "User's first name."
        },
        "lastName": {
          "type": "string",
          "description": "User's last name."
        }
      },
      "required": [
        "id",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quiz definitions. Supports QAPs because listing quizzes does not expose user data.",
          "params": [
            {
              "name": "quizId",
              "description": "Unique identifier for the quiz."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}/questions/{questionId}",
        "definition": {
          "entityName": "Question",
          "schema": {
            "$ref": "#/backend/entities/Question"
          },
          "description": "Stores questions associated with a specific quiz.",
          "params": [
            {
              "name": "quizId",
              "description": "Unique identifier for the quiz."
            },
            {
              "name": "questionId",
              "description": "Unique identifier for the question."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quiz_responses/{quizResponseId}",
        "definition": {
          "entityName": "QuizResponse",
          "schema": {
            "$ref": "#/backend/entities/QuizResponse"
          },
          "description": "Stores user quiz responses. Path-based ownership ensures only the user (or admin) can access their responses.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "quizResponseId",
              "description": "Unique identifier for the quiz response."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quiz_responses/{quizResponseId}/question_responses/{questionResponseId}",
        "definition": {
          "entityName": "QuestionResponse",
          "schema": {
            "$ref": "#/backend/entities/QuestionResponse"
          },
          "description": "Stores individual question responses for a specific quiz response.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "quizResponseId",
              "description": "Unique identifier for the quiz response."
            },
            {
              "name": "questionResponseId",
              "description": "Unique identifier for the question response."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/intake_drafts/{quizId}",
        "definition": {
          "entityName": "QuizResponse",
          "schema": {
            "$ref": "#/backend/entities/QuizResponse"
          },
          "description": "Stores quiz drafts allowing users to resume flows. Path based ownership for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "quizId",
              "description": "Unique identifier for the quiz."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability for the quiz application. User data and quiz responses are organized under user-specific paths to leverage path-based ownership. All necessary data for authorization is denormalized to avoid `get()` calls in security rules, enhancing atomicity. Segregation is employed to separate quiz definitions from user responses.\n\n*   `/quizzes/{quizId}`: Stores quiz definitions. This collection supports QAPs because listing quizzes does not expose user data.\n*   `/users/{userId}/quiz_responses/{quizResponseId}`: Stores user quiz responses. Path-based ownership ensures only the user (or admin, if global roles are implemented) can access their responses.\n*   `/users/{userId}/intake_drafts/{quizId}`: Stores quiz drafts allowing users to resume flows.\n\nAuthorization Independence is achieved by using path-based ownership for `quiz_responses` and `intake_drafts`. This eliminates the need for `get()` calls in security rules to validate user ownership.  The structure supports QAPs because listing operations on `/quizzes` do not expose any user data, as quiz definitions are separate from user-specific data.  Using dedicated collections enforces a homogeneous security posture."
  }
}